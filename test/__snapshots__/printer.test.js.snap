// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Printer colorizedPrint should print in color based on given snippet 1`] = `
"[34mconst[39m head = [33marr =>[39m arr[[32m0[39m];

[0mReturns the head of a list.[0m
[0mUse [33marr[0][39m to return the first element of the passed array.[0m

head([[32m1[39m, [32m2[39m, [32m3[39m]); [32m// 1[39m

[35m[1mhead[22m[39m

[90m[3marray, beginner[23m[39m"
`;

exports[`Printer colorizedPrint should print in color based on given snippet 2`] = `
"[34mconst[39m head = [33marr =>[39m arr[[32m0[39m];

[0mReturns the head of a list.[0m
[0mUse [33marr[0][39m to return the first element of the passed array.[0m

head([[32m1[39m, [32m2[39m, [32m3[39m]); [32m// 1[39m

[35m[1mhead[22m[39m
[90m[3marray, beginner[23m[39m"
`;

exports[`Printer printSnippet should handle snippet in object 1`] = `
Array [
  "[35m[1mhead[22m[39m
[34mconst[39m head = [33marr =>[39m arr[[32m0[39m];",
]
`;

exports[`Printer printSnippet should handle snippets in a array 1`] = `
Array [
  "[35m[1mhead[22m[39m
[34mconst[39m head = [33marr =>[39m arr[[32m0[39m];",
]
`;

exports[`Printer printSnippet with layout set to "c" should log JSON given json flag 1`] = `
Array [
  "[{\\"code\\":\\"const head = arr => arr[0];\\"}]",
]
`;

exports[`Printer printSnippet with layout set to "c" should print in color by default 1`] = `
Array [
  "[34mconst[39m head = [33marr =>[39m arr[[32m0[39m];",
]
`;

exports[`Printer printSnippet with layout set to "d" should log JSON given json flag 1`] = `
Array [
  "[{\\"description\\":\\"Returns the head of a list.\\\\nUse \`arr[0]\` to return the first element of the passed array.\\"}]",
]
`;

exports[`Printer printSnippet with layout set to "d" should print in color by default 1`] = `
Array [
  "[0mReturns the head of a list.[0m
[0mUse [33marr[0][39m to return the first element of the passed array.[0m",
]
`;

exports[`Printer printSnippet with layout set to "e" should log JSON given json flag 1`] = `
Array [
  "[{\\"example\\":\\"head([1, 2, 3]); // 1\\"}]",
]
`;

exports[`Printer printSnippet with layout set to "e" should print in color by default 1`] = `
Array [
  "head([[32m1[39m, [32m2[39m, [32m3[39m]); [32m// 1[39m",
]
`;

exports[`Printer printSnippet with layout set to "i" should log JSON given json flag 1`] = `
Array [
  "[{\\"id\\":\\"head\\"}]",
]
`;

exports[`Printer printSnippet with layout set to "i" should print in color by default 1`] = `
Array [
  "[35m[1mhead[22m[39m",
]
`;

exports[`Printer printSnippet with layout set to "itced" should log JSON given json flag 1`] = `
Array [
  "[{\\"id\\":\\"head\\",\\"tags\\":[\\"array\\",\\"beginner\\"],\\"code\\":\\"const head = arr => arr[0];\\",\\"example\\":\\"head([1, 2, 3]); // 1\\",\\"description\\":\\"Returns the head of a list.\\\\nUse \`arr[0]\` to return the first element of the passed array.\\"}]",
]
`;

exports[`Printer printSnippet with layout set to "itced" should print in color by default 1`] = `
Array [
  "[35m[1mhead[22m[39m
[90m[3marray, beginner[23m[39m

[34mconst[39m head = [33marr =>[39m arr[[32m0[39m];

head([[32m1[39m, [32m2[39m, [32m3[39m]); [32m// 1[39m

[0mReturns the head of a list.[0m
[0mUse [33marr[0][39m to return the first element of the passed array.[0m",
]
`;

exports[`Printer printSnippet with layout set to "t" should log JSON given json flag 1`] = `
Array [
  "[{\\"tags\\":[\\"array\\",\\"beginner\\"]}]",
]
`;

exports[`Printer printSnippet with layout set to "t" should print in color by default 1`] = `
Array [
  "[90m[3marray, beginner[23m[39m",
]
`;
